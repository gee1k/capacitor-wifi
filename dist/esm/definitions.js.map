{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,cASX;AATD,WAAY,cAAc;IACxB,+CAA6B,CAAA;IAC7B,+CAA6B,CAAA;IAC7B,6CAA2B,CAAA;IAC3B,yDAAuC,CAAA;IACvC,yDAAuC,CAAA;IACvC,6BAAW,CAAA;IACX,2BAAS,CAAA;IACT,2BAAS,CAAA;AACX,CAAC,EATW,cAAc,KAAd,cAAc,QASzB;AAED,MAAM,CAAN,IAAY,WAEX;AAFD,WAAY,WAAW;IACrB,uCAAwB,CAAA;AAC1B,CAAC,EAFW,WAAW,KAAX,WAAW,QAEtB;AAiCD,MAAM,CAAN,IAAY,aAOX;AAPD,WAAY,aAAa;IACvB,sGAAqF,CAAA;IACrF,sEAAqD,CAAA;IACrD,4EAA2D,CAAA;IAC3D,wEAAuD,CAAA;IACvD,gFAA+D,CAAA;IAC/D,8DAA6C,CAAA;AAC/C,CAAC,EAPW,aAAa,KAAb,aAAa,QAOxB","sourcesContent":["import type { PermissionState } from '@capacitor/core';\n\nexport enum WifiCapability {\n  WPA2_PSK_CCM = 'WPA2-PSK-CCM',\n  RSN_PSK_CCMP = 'RSN-PSK-CCMP',\n  RSN_SAE_CCM = 'RSN-SAE-CCM',\n  WPA2_EAP_SHA1_CCM = 'WPA2-EAP/SHA1-CCM',\n  RSN_EAP_SHA1_CCMP = 'RSN-EAP/SHA1-CCMP',\n  ESS = 'ESS',\n  ES = 'ES',\n  WP = 'WP',\n}\n\nexport enum SpecialSsid {\n  HIDDEN = '[HIDDEN_SSID]',\n}\n\nexport interface WifiEntry {\n  bssid: string;\n  capabilities: WifiCapability[];\n  ssid: string | SpecialSsid;\n  level: number;\n  isCurrentWifi: boolean;\n}\n\nexport interface ScanWifiResult {\n  wifis: WifiEntry[];\n}\n\nexport interface GetCurrentWifiResult {\n  currentWifi?: WifiEntry;\n}\n\nexport interface ConnectToWifiResult {\n  wasSuccess: true;\n  wifi?: WifiEntry;\n}\n\nexport interface ConnectToWifiRequest {\n  ssid: string;\n  password?: string;\n}\n\nexport interface ConnectToWifiPrefixRequest {\n  ssidPrefix: string;\n  password?: string;\n}\n\nexport enum WifiErrorCode {\n  COULD_NOT_ADD_OR_UPDATE_WIFI_SSID_CONFIG = 'COULD_NOT_ADD_OR_UPDATE_WIFI_SSID_CONFIG',\n  FAILED_TO_ENABLE_NETWORK = 'FAILED_TO_ENABLE_NETWORK',\n  FAILED_TO_RECONNECT_NETWORK = 'FAILED_TO_RECONNECT_NETWORK',\n  MISSING_SSID_CONNECT_WIFI = 'MISSING_SSID_CONNECT_WIFI',\n  MISSING_PASSWORD_CONNECT_WIFI = 'MISSING_PASSWORD_CONNECT_WIFI',\n  METHOD_UNIMPLEMENTED = 'METHOD_UNIMPLEMENTED',\n}\n\nexport interface WifiError {\n  code: WifiErrorCode;\n}\n\nexport interface PermissionStatus {\n  LOCATION: PermissionState;\n  NETWORK: PermissionState;\n}\n\nexport interface WifiPlugin {\n  scanWifi(): Promise<ScanWifiResult>;\n  getCurrentWifi(): Promise<GetCurrentWifiResult>;\n  connectToWifiBySsidAndPassword(\n    connectToWifiRequest: ConnectToWifiRequest,\n  ): Promise<ConnectToWifiResult>;\n  connectToWifiBySsidPrefixAndPassword(\n    connectToWifiPrefixRequest: ConnectToWifiPrefixRequest,\n  ): Promise<ConnectToWifiResult>;\n\n  checkPermissions(): Promise<PermissionStatus>;\n  requestPermissions(): Promise<PermissionStatus>;\n\n  disconnectAndForget(): Promise<void>;\n}\n"]}